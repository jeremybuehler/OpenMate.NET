//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenMateNET.Lib.ProcessEventService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://openmate.automate-webservices.com/", ConfigurationName="ProcessEventService.ProcessEvent")]
    internal interface ProcessEvent {
        
        // CODEGEN: Parameter 'authenticationToken' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="urn:ProcessEvent", ReplyAction="http://openmate.automate-webservices.com/ProcessEvent/processEventResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        OpenMateNET.Lib.ProcessEventService.processEventResponse processEvent(OpenMateNET.Lib.ProcessEventService.processEventRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ProcessEvent", ReplyAction="http://openmate.automate-webservices.com/ProcessEvent/processEventResponse")]
        System.Threading.Tasks.Task<OpenMateNET.Lib.ProcessEventService.processEventResponse> processEventAsync(OpenMateNET.Lib.ProcessEventService.processEventRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openmate.automate-webservices.com/")]
    public partial class authenticationToken : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("userName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("password");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openmate.automate-webservices.com/")]
    public partial class processEventResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string responseField;
        
        private bool businessErrorField;
        
        private bool systemErrorField;
        
        private bool retryableField;
        
        private processEventStatusCode statusCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
                this.RaisePropertyChanged("response");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public bool businessError {
            get {
                return this.businessErrorField;
            }
            set {
                this.businessErrorField = value;
                this.RaisePropertyChanged("businessError");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public bool systemError {
            get {
                return this.systemErrorField;
            }
            set {
                this.systemErrorField = value;
                this.RaisePropertyChanged("systemError");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public bool retryable {
            get {
                return this.retryableField;
            }
            set {
                this.retryableField = value;
                this.RaisePropertyChanged("retryable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public processEventStatusCode statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
                this.RaisePropertyChanged("statusCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openmate.automate-webservices.com/")]
    public enum processEventStatusCode {
        
        /// <remarks/>
        SUCCESS,
        
        /// <remarks/>
        PERMISSION_DENIED,
        
        /// <remarks/>
        UNKNOWN_SOURCE,
        
        /// <remarks/>
        UNKNOWN_DESTINATION,
        
        /// <remarks/>
        PARSE_FAILURE,
        
        /// <remarks/>
        VALIDATION_FAILURE,
        
        /// <remarks/>
        ENDPOINT_FAILURE,
        
        /// <remarks/>
        UNKNOWN_FAILURE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://openmate.automate-webservices.com/")]
    public enum transactionType {
        
        /// <remarks/>
        DealerUp,
        
        /// <remarks/>
        DealerDown,
        
        /// <remarks/>
        ProcessVehicleInventoryBatch,
        
        /// <remarks/>
        ProcessVehicleInventoryChange,
        
        /// <remarks/>
        ProcessVehicleInventoryAdd,
        
        /// <remarks/>
        ProcessVehicleDeleted,
        
        /// <remarks/>
        ProcessCustomerChange,
        
        /// <remarks/>
        ProcessCustomerAdd,
        
        /// <remarks/>
        ProcessCustomerDeleted,
        
        /// <remarks/>
        ProcessDealChange,
        
        /// <remarks/>
        ProcessDealAdd,
        
        /// <remarks/>
        ProcessDealDeleted,
        
        /// <remarks/>
        GetSalespersonConfig,
        
        /// <remarks/>
        GetDealFees,
        
        /// <remarks/>
        GetDealAccessories,
        
        /// <remarks/>
        GetDealRebates,
        
        /// <remarks/>
        GetDealIncentives,
        
        /// <remarks/>
        GetDealInsuranceCompanies,
        
        /// <remarks/>
        GetDealServiceWarranties,
        
        /// <remarks/>
        GetDealLenders,
        
        /// <remarks/>
        ProcessServiceAppointmentCancel,
        
        /// <remarks/>
        ProcessServiceAppointmentAdd,
        
        /// <remarks/>
        ProcessServiceAppointmentChange,
        
        /// <remarks/>
        RepairOrderStatusChanged,
        
        /// <remarks/>
        GetAdvisorConfig,
        
        /// <remarks/>
        GetServiceCatalog,
        
        /// <remarks/>
        GetRepairOrderStatuses,
        
        /// <remarks/>
        ProcessCreditAppAdd,
        
        /// <remarks/>
        ProcessCreditAppChange,
        
        /// <remarks/>
        GetVehicleInventoryKeys,
        
        /// <remarks/>
        GetServiceAppointmentKeys,
        
        /// <remarks/>
        GetDealKeys,
        
        /// <remarks/>
        GetRepairOrderKeys,
        
        /// <remarks/>
        GetCustomerKeys,
        
        /// <remarks/>
        GetCustomers,
        
        /// <remarks/>
        GetVehicleInventory,
        
        /// <remarks/>
        GetRepairOrders,
        
        /// <remarks/>
        GetServiceAppointments,
        
        /// <remarks/>
        ProcessFinancialStatement,
        
        /// <remarks/>
        GetDeals,
        
        /// <remarks/>
        ProcessCommand,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processEvent", WrapperNamespace="http://openmate.automate-webservices.com/", IsWrapped=true)]
    internal partial class processEventRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://openmate.automate-webservices.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OpenMateNET.Lib.ProcessEventService.authenticationToken authenticationToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://openmate.automate-webservices.com/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sourceThirdPartyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://openmate.automate-webservices.com/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int dealerEndpointId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://openmate.automate-webservices.com/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public OpenMateNET.Lib.ProcessEventService.transactionType eventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://openmate.automate-webservices.com/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string payload;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://openmate.automate-webservices.com/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string payloadVersion;
        
        public processEventRequest() {
        }
        
        public processEventRequest(OpenMateNET.Lib.ProcessEventService.authenticationToken authenticationToken, int sourceThirdPartyId, int dealerEndpointId, OpenMateNET.Lib.ProcessEventService.transactionType eventType, string payload, string payloadVersion) {
            this.authenticationToken = authenticationToken;
            this.sourceThirdPartyId = sourceThirdPartyId;
            this.dealerEndpointId = dealerEndpointId;
            this.eventType = eventType;
            this.payload = payload;
            this.payloadVersion = payloadVersion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processEventResponse", WrapperNamespace="http://openmate.automate-webservices.com/", IsWrapped=true)]
    internal partial class processEventResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://openmate.automate-webservices.com/", Order=0)]
        public OpenMateNET.Lib.ProcessEventService.processEventResult processEventResult;
        
        public processEventResponse() {
        }
        
        public processEventResponse(OpenMateNET.Lib.ProcessEventService.processEventResult processEventResult) {
            this.processEventResult = processEventResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface ProcessEventChannel : OpenMateNET.Lib.ProcessEventService.ProcessEvent, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class ProcessEventClient : System.ServiceModel.ClientBase<OpenMateNET.Lib.ProcessEventService.ProcessEvent>, OpenMateNET.Lib.ProcessEventService.ProcessEvent {
        
        public ProcessEventClient() {
        }
        
        public ProcessEventClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProcessEventClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessEventClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessEventClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenMateNET.Lib.ProcessEventService.processEventResponse OpenMateNET.Lib.ProcessEventService.ProcessEvent.processEvent(OpenMateNET.Lib.ProcessEventService.processEventRequest request) {
            return base.Channel.processEvent(request);
        }
        
        public OpenMateNET.Lib.ProcessEventService.processEventResult processEvent(OpenMateNET.Lib.ProcessEventService.authenticationToken authenticationToken, int sourceThirdPartyId, int dealerEndpointId, OpenMateNET.Lib.ProcessEventService.transactionType eventType, string payload, string payloadVersion) {
            OpenMateNET.Lib.ProcessEventService.processEventRequest inValue = new OpenMateNET.Lib.ProcessEventService.processEventRequest();
            inValue.authenticationToken = authenticationToken;
            inValue.sourceThirdPartyId = sourceThirdPartyId;
            inValue.dealerEndpointId = dealerEndpointId;
            inValue.eventType = eventType;
            inValue.payload = payload;
            inValue.payloadVersion = payloadVersion;
            OpenMateNET.Lib.ProcessEventService.processEventResponse retVal = ((OpenMateNET.Lib.ProcessEventService.ProcessEvent)(this)).processEvent(inValue);
            return retVal.processEventResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenMateNET.Lib.ProcessEventService.processEventResponse> OpenMateNET.Lib.ProcessEventService.ProcessEvent.processEventAsync(OpenMateNET.Lib.ProcessEventService.processEventRequest request) {
            return base.Channel.processEventAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenMateNET.Lib.ProcessEventService.processEventResponse> processEventAsync(OpenMateNET.Lib.ProcessEventService.authenticationToken authenticationToken, int sourceThirdPartyId, int dealerEndpointId, OpenMateNET.Lib.ProcessEventService.transactionType eventType, string payload, string payloadVersion) {
            OpenMateNET.Lib.ProcessEventService.processEventRequest inValue = new OpenMateNET.Lib.ProcessEventService.processEventRequest();
            inValue.authenticationToken = authenticationToken;
            inValue.sourceThirdPartyId = sourceThirdPartyId;
            inValue.dealerEndpointId = dealerEndpointId;
            inValue.eventType = eventType;
            inValue.payload = payload;
            inValue.payloadVersion = payloadVersion;
            return ((OpenMateNET.Lib.ProcessEventService.ProcessEvent)(this)).processEventAsync(inValue);
        }
    }
}
